@prefix ex: <http://ex.usc.isi.edu/ontology/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node1c04mgukgx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "art-works-2.jl" ;
	km-dev:modelPublicationTime "1511986330256"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"url\"}],[{\"columnName\":\"Artist:\"}],[{\"columnName\":\"image\"}],[{\"columnName\":\"Medium:\"}],[{\"columnName\":\"Dimensions:\"}],[{\"columnName\":\"Date:\"}],[{\"columnName\":\"Credit Line:\"}],[{\"columnName\":\"title\"}],[{\"columnName\":\"Culture:\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"birth_date\"}],[{\"columnName\":\"url\"}],[{\"columnName\":\"death_date\"}],[{\"columnName\":\"artist_uri\"}],[{\"columnName\":\"museum\"}],[{\"columnName\":\"museum_location\"}],[{\"columnName\":\"painting_culture\"}],[{\"columnName\":\"museum_uri\"}],[{\"columnName\":\"birth_death\"}],[{\"columnName\":\"artist_country\"}],[{\"columnName\":\"artist_name\"}],[{\"columnName\":\"painting_date\"}],[{\"columnName\":\"image\"}],[{\"columnName\":\"artist_country2\"}],[{\"columnName\":\"Medium:\"}],[{\"columnName\":\"my_title\"}],[{\"columnName\":\"painting_country\"}],[{\"columnName\":\"Dimensions:\"}],[{\"columnName\":\"painting_uri\"}],[{\"columnName\":\"Date:\"}],[{\"columnName\":\"Credit Line:\"}],[{\"columnName\":\"Culture:\"}]]" ;
	km-dev:hasModelLabel "art-works-2.jl" ;
	km-dev:hasWorksheetHistory """[
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Artist:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"birth_death\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"import string;\\nx = getValue(\\\"Artist:\\\");\\nx = re.sub('[^\\\\w\\\\-]+','',x)\\ndates = re.findall('([0-9/]+-[0-9/]+)', x);\\nreturn str(dates);\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"error\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Artist:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_death\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"birth_death\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"birth_date\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"x = getValue(\\\"birth_death\\\");\\ndates = re.findall('([0-9/]+)-[0-9/]+', x);\\nif len(dates) > 0:\\n    return dates[0].strip();\\nelse:\\n    return \\\"\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"error\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_death\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_date\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"birth_date\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"death_date\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"x = getValue(\\\"birth_death\\\");\\ndates = re.findall('[0-9/]+-([0-9/]+)', x);\\nif len(dates) > 0:\\n    return dates[0].strip();\\nelse:\\n    return \\\"\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"error\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_death\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"death_date\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"birth_death\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"artist_name\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"x = getValue(\\\"Artist:\\\");\\n#x = re.sub('[^\\\\w\\\\-\\\\(\\\\) ]+','',x)\\nif x is not None:\\n    name = re.findall('^([^\\\\(]+)[\\\\($]', x);\\n    if len(name) > 0:\\n        return name[0].strip();\\n    else:\\n        return \\\"\\\"\\n\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"error\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Artist:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_name\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"title\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"my_title\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"import json\\nx = getValue(\\\"title\\\")\\nx = re.sub('[^\\\\w \\\\'\\\\[\\\\],{}:\\\"]', '', x)\\n#return x\\nx = re.findall('\\\\[{\\\"values\\\":\\\"([\\\\w \\\"\\\\']+)\\\"}\\\\]$', x)\\nif len(x) > 0:\\n    return str(x[0]).strip()\\nelse:\\n    return \\\"\\\"\\n\\n\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"error\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"title\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"my_title\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Accession Number:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"museum\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"Metropolitan Museum of Art\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"museum\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"museum_uri\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"metropolitan_museum_of_art\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"museum_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"museum_location\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"Metropolitan Museum of Art\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum_location\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"artist_name\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"artist_uri\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"x = getValue(\\\"artist_name\\\");\\ny = getValue(\\\"birth_date\\\")\\nx = x.strip()\\nx = re.sub('[^\\\\w ]', '', x)\\nx = re.sub('\\\\s+', '_', x)\\nif len(x) > 0:\\n    return x.lower()\\nelse:\\n    return \\\"UNIDENTIFIED\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_date\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_name\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"my_title\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"painting_uri\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"x = getValue(\\\"my_title\\\");\\nx = x.strip()\\nx = re.sub('[^\\\\w ]', '', x)\\nx = re.sub('\\\\s+', '_', x)\\nif x != 'error':\\n    return x.lower()\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"my_title\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"painting_date\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_date\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_date\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"painting_country\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_country\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_country\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"painting_culture\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_culture\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"death_date\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"artist_country\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_country\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"artist_country\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"artist_country2\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return \\\"NA\\\"\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_country2\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"artist_name\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/artistName\",
                    \"DomainLabel\": \"ex:Artist1 (add)\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_name\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_name\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"birth_date\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/artistBirthDate\",
                    \"DomainLabel\": \"ex:Artist1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_date\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"birth_date\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"death_date\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/artistDeathDate\",
                    \"DomainLabel\": \"ex:Artist1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"death_date\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"death_date\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"my_title\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingTitle\",
                    \"DomainLabel\": \"ex:Painting1 (add)\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"my_title\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"my_title\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Medium:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingMedium\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Medium:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Medium:\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Date:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingDate\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Date:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Date:\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Dimensions:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingDimensions\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Dimensions:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Dimensions:\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Credit Line:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingCredit\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Credit Line:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Credit Line:\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"museum\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Museum\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/museumName\",
                    \"DomainLabel\": \"ex:Museum1 (add)\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"museum_location\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Museum\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/museumLocation\",
                    \"DomainLabel\": \"ex:Museum1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum_location\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum_location\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetMetaPropertyCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"museum_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"type\": \"other\",
                \"value\": \"isUriOfClass\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"type\": \"other\",
                \"value\": \"http://ex.usc.isi.edu/ontology/Museum\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"type\": \"other\",
                \"value\": \"http://ex.usc.isi.edu/ontology/Museum1\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Museum\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"ex:Museum1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum_uri\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"museum_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetMetaPropertyCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"artist_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"type\": \"other\",
                \"value\": \"isUriOfClass\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"type\": \"other\",
                \"value\": \"http://ex.usc.isi.edu/ontology/Artist\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"type\": \"other\",
                \"value\": \"http://ex.usc.isi.edu/ontology/Artist1\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"ex:Artist1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_uri\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetMetaPropertyCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"type\": \"other\",
                \"value\": \"isUriOfClass\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"type\": \"other\",
                \"value\": \"http://ex.usc.isi.edu/ontology/Painting\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"type\": \"other\",
                \"value\": \"http://ex.usc.isi.edu/ontology/Painting1\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_uri\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"image\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingImage\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"image\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"image\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"url\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingurl\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"url\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_date\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingDate\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_date\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_date\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_country\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingCountry\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_country\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_country\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"painting_culture\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingCulture\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_culture\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"painting_culture\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"artist_country2\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/artistCountry\",
                    \"DomainLabel\": \"ex:Artist1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_country2\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"artist_country2\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"Culture:\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"DomainId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"isPrimary\": true,
                    \"isProvenance\": false,
                    \"FullType\": \"http://ex.usc.isi.edu/ontology/paintingCulture\",
                    \"DomainLabel\": \"ex:Painting1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"language\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Culture:\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"Culture:\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"AddLinkCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"edge\",
                \"type\": \"other\",
                \"value\": {
                    \"edgeTargetId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"edgeId\": \"http://ex.usc.isi.edu/ontology/museumArtists\",
                    \"edgeTargetUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"edgeSourceId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"edgeSourceUri\": \"http://ex.usc.isi.edu/ontology/Museum\"
                }
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    },
    {
        \"commandName\": \"AddLinkCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"edge\",
                \"type\": \"other\",
                \"value\": {
                    \"edgeTargetId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"edgeId\": \"http://ex.usc.isi.edu/ontology/museumPaintings\",
                    \"edgeTargetUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"edgeSourceId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"edgeSourceUri\": \"http://ex.usc.isi.edu/ontology/Museum\"
                }
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    },
    {
        \"commandName\": \"AddLinkCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"edge\",
                \"type\": \"other\",
                \"value\": {
                    \"edgeTargetId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"edgeId\": \"http://ex.usc.isi.edu/ontology/paintingArtist\",
                    \"edgeTargetUri\": \"http://ex.usc.isi.edu/ontology/Artist\",
                    \"edgeSourceId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"edgeSourceUri\": \"http://ex.usc.isi.edu/ontology/Painting\"
                }
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    },
    {
        \"commandName\": \"AddLinkCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"edge\",
                \"type\": \"other\",
                \"value\": {
                    \"edgeTargetId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"edgeId\": \"http://ex.usc.isi.edu/ontology/paintingMuseum\",
                    \"edgeTargetUri\": \"http://ex.usc.isi.edu/ontology/Museum\",
                    \"edgeSourceId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"edgeSourceUri\": \"http://ex.usc.isi.edu/ontology/Painting\"
                }
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    },
    {
        \"commandName\": \"AddLinkCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"edge\",
                \"type\": \"other\",
                \"value\": {
                    \"edgeTargetId\": \"http://ex.usc.isi.edu/ontology/Museum1\",
                    \"edgeId\": \"http://ex.usc.isi.edu/ontology/artistMuseum\",
                    \"edgeTargetUri\": \"http://ex.usc.isi.edu/ontology/Museum\",
                    \"edgeSourceId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"edgeSourceUri\": \"http://ex.usc.isi.edu/ontology/Artist\"
                }
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    },
    {
        \"commandName\": \"AddLinkCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"edge\",
                \"type\": \"other\",
                \"value\": {
                    \"edgeTargetId\": \"http://ex.usc.isi.edu/ontology/Painting1\",
                    \"edgeId\": \"http://ex.usc.isi.edu/ontology/artistPaintings\",
                    \"edgeTargetUri\": \"http://ex.usc.isi.edu/ontology/Painting\",
                    \"edgeSourceId\": \"http://ex.usc.isi.edu/ontology/Artist1\",
                    \"edgeSourceUri\": \"http://ex.usc.isi.edu/ontology/Artist\"
                }
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    }
]""" .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 a rr:TriplesMap .

_:node1c04mgukgx1 km-dev:hasTriplesMap km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx2 rr:tableName "art-works-2.jl" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasLogicalTable _:node1c04mgukgx2 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:logicalTable _:node1c04mgukgx2 ;
	rr:subjectMap _:node1c04mgukgx3 .

_:node1c04mgukgx1 km-dev:hasSubjectMap _:node1c04mgukgx3 .

_:node1c04mgukgx3 km-dev:isPartOfMapping _:node1c04mgukgx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://ex.usc.isi.edu/ontology/Artist1" ;
	rr:class ex:Artist ;
	rr:template "{artist_uri}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_49fc78bd-4691-4172-bf10-b546ef5d4bd2 rr:predicate ex:artistMuseum .

km-dev:RefObjectMap_2f4a1d64-d87c-4c62-9794-e06b38bd81fa a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap km-dev:RefObjectMap_2f4a1d64-d87c-4c62-9794-e06b38bd81fa .

km-dev:PredicateObjectMap_49fc78bd-4691-4172-bf10-b546ef5d4bd2 rr:objectMap km-dev:RefObjectMap_2f4a1d64-d87c-4c62-9794-e06b38bd81fa .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:predicateObjectMap km-dev:PredicateObjectMap_49fc78bd-4691-4172-bf10-b546ef5d4bd2 .

km-dev:PredicateObjectMap_49fc78bd-4691-4172-bf10-b546ef5d4bd2 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_49fc78bd-4691-4172-bf10-b546ef5d4bd2 .

km-dev:PredicateObjectMap_013d2058-ed19-40d6-8a08-807906f66402 rr:predicate ex:artistBirthDate .

_:node1c04mgukgx4 rr:column "birth_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx4 .

km-dev:PredicateObjectMap_013d2058-ed19-40d6-8a08-807906f66402 rr:objectMap _:node1c04mgukgx4 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:predicateObjectMap km-dev:PredicateObjectMap_013d2058-ed19-40d6-8a08-807906f66402 .

km-dev:PredicateObjectMap_013d2058-ed19-40d6-8a08-807906f66402 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_013d2058-ed19-40d6-8a08-807906f66402 .

km-dev:PredicateObjectMap_44b6e970-83b6-4806-91b9-3a222c77af19 rr:predicate ex:artistDeathDate .

_:node1c04mgukgx5 rr:column "death_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx5 .

km-dev:PredicateObjectMap_44b6e970-83b6-4806-91b9-3a222c77af19 rr:objectMap _:node1c04mgukgx5 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:predicateObjectMap km-dev:PredicateObjectMap_44b6e970-83b6-4806-91b9-3a222c77af19 .

km-dev:PredicateObjectMap_44b6e970-83b6-4806-91b9-3a222c77af19 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_44b6e970-83b6-4806-91b9-3a222c77af19 .

km-dev:PredicateObjectMap_95d2a1db-755a-4f77-9e93-3304f2cec000 rr:predicate ex:artistName .

_:node1c04mgukgx6 rr:column "artist_name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx6 .

km-dev:PredicateObjectMap_95d2a1db-755a-4f77-9e93-3304f2cec000 rr:objectMap _:node1c04mgukgx6 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:predicateObjectMap km-dev:PredicateObjectMap_95d2a1db-755a-4f77-9e93-3304f2cec000 .

km-dev:PredicateObjectMap_95d2a1db-755a-4f77-9e93-3304f2cec000 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_95d2a1db-755a-4f77-9e93-3304f2cec000 .

km-dev:PredicateObjectMap_8e0f4b6f-4cce-437c-bf28-ac8752be724e rr:predicate ex:artistCountry .

_:node1c04mgukgx7 rr:constant "NA" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx7 .

km-dev:PredicateObjectMap_8e0f4b6f-4cce-437c-bf28-ac8752be724e rr:objectMap _:node1c04mgukgx7 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:predicateObjectMap km-dev:PredicateObjectMap_8e0f4b6f-4cce-437c-bf28-ac8752be724e .

km-dev:PredicateObjectMap_8e0f4b6f-4cce-437c-bf28-ac8752be724e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_8e0f4b6f-4cce-437c-bf28-ac8752be724e .

km-dev:PredicateObjectMap_54aaa9c3-eadb-4cc6-85d4-5113bf1c1e06 rr:predicate ex:artistPaintings .

km-dev:RefObjectMap_2714c05f-7d44-45c2-998f-f5b74e4dc599 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap km-dev:RefObjectMap_2714c05f-7d44-45c2-998f-f5b74e4dc599 .

km-dev:PredicateObjectMap_54aaa9c3-eadb-4cc6-85d4-5113bf1c1e06 rr:objectMap km-dev:RefObjectMap_2714c05f-7d44-45c2-998f-f5b74e4dc599 .

km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 rr:predicateObjectMap km-dev:PredicateObjectMap_54aaa9c3-eadb-4cc6-85d4-5113bf1c1e06 .

km-dev:PredicateObjectMap_54aaa9c3-eadb-4cc6-85d4-5113bf1c1e06 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_54aaa9c3-eadb-4cc6-85d4-5113bf1c1e06 .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e a rr:TriplesMap .

_:node1c04mgukgx1 km-dev:hasTriplesMap km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx8 rr:tableName "art-works-2.jl" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasLogicalTable _:node1c04mgukgx8 .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e rr:logicalTable _:node1c04mgukgx8 ;
	rr:subjectMap _:node1c04mgukgx9 .

_:node1c04mgukgx1 km-dev:hasSubjectMap _:node1c04mgukgx9 .

_:node1c04mgukgx9 km-dev:isPartOfMapping _:node1c04mgukgx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://ex.usc.isi.edu/ontology/Museum1" ;
	rr:class ex:Museum ;
	rr:template "metropolitan_museum_of_art" .

km-dev:PredicateObjectMap_bfc0b8a3-bad2-472b-a95a-a7210ede8bfe rr:predicate ex:museumPaintings .

km-dev:RefObjectMap_ca658dd2-1d08-473c-bc9e-2c1b172f664d a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap km-dev:RefObjectMap_ca658dd2-1d08-473c-bc9e-2c1b172f664d .

km-dev:PredicateObjectMap_bfc0b8a3-bad2-472b-a95a-a7210ede8bfe rr:objectMap km-dev:RefObjectMap_ca658dd2-1d08-473c-bc9e-2c1b172f664d .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e rr:predicateObjectMap km-dev:PredicateObjectMap_bfc0b8a3-bad2-472b-a95a-a7210ede8bfe .

km-dev:PredicateObjectMap_bfc0b8a3-bad2-472b-a95a-a7210ede8bfe a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_bfc0b8a3-bad2-472b-a95a-a7210ede8bfe .

km-dev:PredicateObjectMap_2850cf8d-2d3b-4d39-8798-11b04d9775a1 rr:predicate ex:museumName .

_:node1c04mgukgx10 rr:column "museum" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx10 .

km-dev:PredicateObjectMap_2850cf8d-2d3b-4d39-8798-11b04d9775a1 rr:objectMap _:node1c04mgukgx10 .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e rr:predicateObjectMap km-dev:PredicateObjectMap_2850cf8d-2d3b-4d39-8798-11b04d9775a1 .

km-dev:PredicateObjectMap_2850cf8d-2d3b-4d39-8798-11b04d9775a1 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2850cf8d-2d3b-4d39-8798-11b04d9775a1 .

km-dev:PredicateObjectMap_82fe3507-9ff1-4fe9-ad50-79247abee633 rr:predicate ex:museumLocation .

_:node1c04mgukgx11 rr:column "museum_location" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx11 .

km-dev:PredicateObjectMap_82fe3507-9ff1-4fe9-ad50-79247abee633 rr:objectMap _:node1c04mgukgx11 .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e rr:predicateObjectMap km-dev:PredicateObjectMap_82fe3507-9ff1-4fe9-ad50-79247abee633 .

km-dev:PredicateObjectMap_82fe3507-9ff1-4fe9-ad50-79247abee633 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_82fe3507-9ff1-4fe9-ad50-79247abee633 .

km-dev:PredicateObjectMap_58ff929f-0f3a-43d3-bcba-7e81dde50a64 rr:predicate ex:museumArtists .

km-dev:RefObjectMap_f47d3a31-6ac4-450e-ab5a-036ae1f3f1b7 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap km-dev:RefObjectMap_f47d3a31-6ac4-450e-ab5a-036ae1f3f1b7 .

km-dev:PredicateObjectMap_58ff929f-0f3a-43d3-bcba-7e81dde50a64 rr:objectMap km-dev:RefObjectMap_f47d3a31-6ac4-450e-ab5a-036ae1f3f1b7 .

km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e rr:predicateObjectMap km-dev:PredicateObjectMap_58ff929f-0f3a-43d3-bcba-7e81dde50a64 .

km-dev:PredicateObjectMap_58ff929f-0f3a-43d3-bcba-7e81dde50a64 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_58ff929f-0f3a-43d3-bcba-7e81dde50a64 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 a rr:TriplesMap .

_:node1c04mgukgx1 km-dev:hasTriplesMap km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx12 rr:tableName "art-works-2.jl" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasLogicalTable _:node1c04mgukgx12 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:logicalTable _:node1c04mgukgx12 ;
	rr:subjectMap _:node1c04mgukgx13 .

_:node1c04mgukgx1 km-dev:hasSubjectMap _:node1c04mgukgx13 .

_:node1c04mgukgx13 km-dev:isPartOfMapping _:node1c04mgukgx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://ex.usc.isi.edu/ontology/Painting1" ;
	rr:class ex:Painting ;
	rr:template "{painting_uri}" .

km-dev:PredicateObjectMap_d2335f10-bda0-475e-90bd-d8713816cd47 rr:predicate ex:paintingurl .

_:node1c04mgukgx14 rr:column "url" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx14 .

km-dev:PredicateObjectMap_d2335f10-bda0-475e-90bd-d8713816cd47 rr:objectMap _:node1c04mgukgx14 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_d2335f10-bda0-475e-90bd-d8713816cd47 .

km-dev:PredicateObjectMap_d2335f10-bda0-475e-90bd-d8713816cd47 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d2335f10-bda0-475e-90bd-d8713816cd47 .

km-dev:PredicateObjectMap_fdd26ae2-6bab-4418-a557-d9a333dd87fb rr:predicate ex:paintingCulture .

_:node1c04mgukgx15 rr:column "painting_culture" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx15 .

km-dev:PredicateObjectMap_fdd26ae2-6bab-4418-a557-d9a333dd87fb rr:objectMap _:node1c04mgukgx15 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_fdd26ae2-6bab-4418-a557-d9a333dd87fb .

km-dev:PredicateObjectMap_fdd26ae2-6bab-4418-a557-d9a333dd87fb a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_fdd26ae2-6bab-4418-a557-d9a333dd87fb .

km-dev:PredicateObjectMap_d0239788-56e2-4a74-a83c-75c226e9436c rr:predicate ex:paintingDate .

_:node1c04mgukgx16 rr:column "painting_date" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx16 .

km-dev:PredicateObjectMap_d0239788-56e2-4a74-a83c-75c226e9436c rr:objectMap _:node1c04mgukgx16 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_d0239788-56e2-4a74-a83c-75c226e9436c .

km-dev:PredicateObjectMap_d0239788-56e2-4a74-a83c-75c226e9436c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_d0239788-56e2-4a74-a83c-75c226e9436c .

km-dev:PredicateObjectMap_4dae9597-da07-4356-8e3a-6a6616aa603c rr:predicate ex:paintingImage .

_:node1c04mgukgx17 rr:column "image" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx17 .

km-dev:PredicateObjectMap_4dae9597-da07-4356-8e3a-6a6616aa603c rr:objectMap _:node1c04mgukgx17 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_4dae9597-da07-4356-8e3a-6a6616aa603c .

km-dev:PredicateObjectMap_4dae9597-da07-4356-8e3a-6a6616aa603c a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4dae9597-da07-4356-8e3a-6a6616aa603c .

km-dev:PredicateObjectMap_c547ed7c-e76a-4d49-b349-bbc89b5e6862 rr:predicate ex:paintingMedium .

_:node1c04mgukgx18 rr:column "Medium:" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx18 .

km-dev:PredicateObjectMap_c547ed7c-e76a-4d49-b349-bbc89b5e6862 rr:objectMap _:node1c04mgukgx18 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_c547ed7c-e76a-4d49-b349-bbc89b5e6862 .

km-dev:PredicateObjectMap_c547ed7c-e76a-4d49-b349-bbc89b5e6862 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c547ed7c-e76a-4d49-b349-bbc89b5e6862 .

km-dev:PredicateObjectMap_c4883bab-782b-4f77-b9cb-2b8b26caee84 rr:predicate ex:paintingTitle .

_:node1c04mgukgx19 rr:column "my_title" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx19 .

km-dev:PredicateObjectMap_c4883bab-782b-4f77-b9cb-2b8b26caee84 rr:objectMap _:node1c04mgukgx19 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_c4883bab-782b-4f77-b9cb-2b8b26caee84 .

km-dev:PredicateObjectMap_c4883bab-782b-4f77-b9cb-2b8b26caee84 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c4883bab-782b-4f77-b9cb-2b8b26caee84 .

km-dev:PredicateObjectMap_e04a29d5-8019-4fe0-b19f-8f4ececc44de rr:predicate ex:paintingDimensions .

_:node1c04mgukgx20 rr:column "Dimensions:" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx20 .

km-dev:PredicateObjectMap_e04a29d5-8019-4fe0-b19f-8f4ececc44de rr:objectMap _:node1c04mgukgx20 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_e04a29d5-8019-4fe0-b19f-8f4ececc44de .

km-dev:PredicateObjectMap_e04a29d5-8019-4fe0-b19f-8f4ececc44de a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_e04a29d5-8019-4fe0-b19f-8f4ececc44de .

km-dev:PredicateObjectMap_00929079-a3e8-4a3d-bb68-73a642efbc98 rr:predicate ex:paintingCountry .

_:node1c04mgukgx21 rr:column "painting_country" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx21 .

km-dev:PredicateObjectMap_00929079-a3e8-4a3d-bb68-73a642efbc98 rr:objectMap _:node1c04mgukgx21 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_00929079-a3e8-4a3d-bb68-73a642efbc98 .

km-dev:PredicateObjectMap_00929079-a3e8-4a3d-bb68-73a642efbc98 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_00929079-a3e8-4a3d-bb68-73a642efbc98 .

km-dev:PredicateObjectMap_60733b4f-065c-4cd0-8033-abb1f917ea09 rr:predicate ex:paintingDate .

_:node1c04mgukgx22 rr:column "Date:" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx22 .

km-dev:PredicateObjectMap_60733b4f-065c-4cd0-8033-abb1f917ea09 rr:objectMap _:node1c04mgukgx22 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_60733b4f-065c-4cd0-8033-abb1f917ea09 .

km-dev:PredicateObjectMap_60733b4f-065c-4cd0-8033-abb1f917ea09 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_60733b4f-065c-4cd0-8033-abb1f917ea09 .

km-dev:PredicateObjectMap_4b011c52-b153-4f24-8653-ba6784c5ffc6 rr:predicate ex:paintingCredit .

_:node1c04mgukgx23 rr:column "Credit Line:" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx23 .

km-dev:PredicateObjectMap_4b011c52-b153-4f24-8653-ba6784c5ffc6 rr:objectMap _:node1c04mgukgx23 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_4b011c52-b153-4f24-8653-ba6784c5ffc6 .

km-dev:PredicateObjectMap_4b011c52-b153-4f24-8653-ba6784c5ffc6 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_4b011c52-b153-4f24-8653-ba6784c5ffc6 .

km-dev:PredicateObjectMap_2771093c-9c89-4a2d-976d-2e8d08389951 rr:predicate ex:paintingCulture .

_:node1c04mgukgx24 rr:column "Culture:" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap _:node1c04mgukgx24 .

km-dev:PredicateObjectMap_2771093c-9c89-4a2d-976d-2e8d08389951 rr:objectMap _:node1c04mgukgx24 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_2771093c-9c89-4a2d-976d-2e8d08389951 .

km-dev:PredicateObjectMap_2771093c-9c89-4a2d-976d-2e8d08389951 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_2771093c-9c89-4a2d-976d-2e8d08389951 .

km-dev:PredicateObjectMap_5ca12529-9eff-440d-9776-fdb9623ba89d rr:predicate ex:paintingArtist .

km-dev:RefObjectMap_59d21064-d760-45c6-b94c-5d564e42e465 a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_7b1c45bb-4f29-45e3-9d46-50bd164917c9 ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap km-dev:RefObjectMap_59d21064-d760-45c6-b94c-5d564e42e465 .

km-dev:PredicateObjectMap_5ca12529-9eff-440d-9776-fdb9623ba89d rr:objectMap km-dev:RefObjectMap_59d21064-d760-45c6-b94c-5d564e42e465 .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_5ca12529-9eff-440d-9776-fdb9623ba89d .

km-dev:PredicateObjectMap_5ca12529-9eff-440d-9776-fdb9623ba89d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_5ca12529-9eff-440d-9776-fdb9623ba89d .

km-dev:PredicateObjectMap_c5adce5d-952e-4369-a78f-03f43224948e rr:predicate ex:paintingMuseum .

km-dev:RefObjectMap_12ab6522-2a79-4619-86ab-7a4e24057a8f a rr:RefObjectMap , rr:ObjectMap ;
	rr:parentTriplesMap km-dev:TriplesMap_6a58ada9-0cba-4b78-a1b5-a1d34597696e ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasObjectMap km-dev:RefObjectMap_12ab6522-2a79-4619-86ab-7a4e24057a8f .

km-dev:PredicateObjectMap_c5adce5d-952e-4369-a78f-03f43224948e rr:objectMap km-dev:RefObjectMap_12ab6522-2a79-4619-86ab-7a4e24057a8f .

km-dev:TriplesMap_894b537a-ad23-4508-a8e7-088ab2b477d3 rr:predicateObjectMap km-dev:PredicateObjectMap_c5adce5d-952e-4369-a78f-03f43224948e .

km-dev:PredicateObjectMap_c5adce5d-952e-4369-a78f-03f43224948e a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1c04mgukgx1 .

_:node1c04mgukgx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_c5adce5d-952e-4369-a78f-03f43224948e .
